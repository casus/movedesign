[{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ecoisilva.github.io/movedesign/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ecoisilva.github.io/movedesign/articles/issues.html","id":"resolving-installation-issues","dir":"Articles","previous_headings":"","what":"Resolving installation issues","title":"Issues","text":"movedesign package requires many non-default R packages. met errors installation/updates, try restarting R session (RStudio menu bar, Session > Restart R; close re-open R). , reinstall package using: may also need explicitly install fontawesome package: see error installing GitHub, follow steps: Step 1: Generate GitHub personal access token following command RStudio R console: take GitHub generate token. Configure token (just scroll generate using default settings) copy clipboard (string letters numbers). Step 2: Save personal access token R environment. Back R, enter: open .Renviron file new RStudio window. Add following line file: Replace GITHUB_PERSONAL_ACCESS_TOKEN token just copied GitHub. Step 3: Save file, close , restart R. , able install movedesign usual command: encounter issues, please contact Inês Silva assistance.","code":"remotes::install_github(\"ecoisilva/movedesign\", dependencies = TRUE) install.packages(\"fontawesome\") usethis::create_github_token() usethis::edit_r_environ() GITHUB_PAT=\"GITHUB_PERSONAL_ACCESS_TOKEN\" remotes::install_github(\"ecoisilva/movedesign\", dependencies = TRUE)"},{"path":"https://ecoisilva.github.io/movedesign/articles/issues.html","id":"check-package-dependencies","dir":"Articles","previous_headings":"","what":"Check package dependencies:","title":"Issues","text":"movedesign package requires many non-default R packages. met errors installation/updates, try restarting R session (RStudio menu bar, Session > Restart R; close re-open R). , reinstall package using: may also need explicitly install fontawesome package:","code":"remotes::install_github(\"ecoisilva/movedesign\", dependencies = TRUE) install.packages(\"fontawesome\")"},{"path":"https://ecoisilva.github.io/movedesign/articles/issues.html","id":"resolving-failed-to-install-unknown-package-from-github","dir":"Articles","previous_headings":"","what":"Resolving “failed to install ‘unknown package’ from GitHub”:","title":"Issues","text":"see error installing GitHub, follow steps: Step 1: Generate GitHub personal access token following command RStudio R console: take GitHub generate token. Configure token (just scroll generate using default settings) copy clipboard (string letters numbers). Step 2: Save personal access token R environment. Back R, enter: open .Renviron file new RStudio window. Add following line file: Replace GITHUB_PERSONAL_ACCESS_TOKEN token just copied GitHub. Step 3: Save file, close , restart R. , able install movedesign usual command: encounter issues, please contact Inês Silva assistance.","code":"usethis::create_github_token() usethis::edit_r_environ() GITHUB_PAT=\"GITHUB_PERSONAL_ACCESS_TOKEN\" remotes::install_github(\"ecoisilva/movedesign\", dependencies = TRUE)"},{"path":"https://ecoisilva.github.io/movedesign/articles/movedesign.html","id":"why-movedesign","dir":"Articles","previous_headings":"","what":"Why movedesign?","title":"movedesign","text":"movedesign built using R language Shiny easy--use user interface (GUI). application allow test different tracking schedules considering initially set research question (currently home range speed/distance estimation). Doesn’t require R coding experience. Leverages ctmm R package statistically unbiased methods.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/movedesign.html","id":"how-to-start","dir":"Articles","previous_headings":"","what":"How to start:","title":"movedesign","text":"application includes built-guided tutorial help navigate features. open 'Home' tab, ’ll find following:  step--step guide walk app, ensuring understand features functionality. action required, clearly highlighted. Please follow instructions carefully, step builds previous one. action needed, simply continue next step clicking 'Next' pressing right arrow key keyboard. information guided tour also partially available . Warning: guided tutorial, refrain interacting anything outside highlighted zones avoid interruptions. tutorial provides overview key features cover detailed definitions. -depth explanations, can access comprehensive help tips time. Documentation also available Silva et al. (2023). current options movedesign workflows. Users may configure study design selecting different options data source, research target, analytical target. workflows follow stepwise approach, tabs displayed sequentially right sidebar. Irrelevant tabs current workflow automatically hidden. Step 1. Data source: Users can specify data source: Upload: Import dataset local file. Select: Choose pre-existing datasets available application. Simulate: Generate synthetic data testing modeling purposes. Step 2. Research target: Users can define research targets: Home range: Estimate long-term space-use requirements. Speed & distance: Estimate fine-scale movement metrics, speed distance traveled. Step 3. Analytical target: Users can decide analytical target estimates: Individual estimate: Obtain metrics single individual. Mean estimate sampled population: Obtain mean estimate across sampled group. Compare estimates two sampled groups: Perform comparative analysis two groups within tracked population (detection sub-groups). Additionally, users option : Add individual variation: Include variation among individuals simulations (available mean estimate comparisons). Go detailed information regarding Individual estimate workflow. ctmm R package ctmmweb Shiny application.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/movedesign.html","id":"workflows","dir":"Articles","previous_headings":"","what":"Workflows","title":"movedesign","text":"current options movedesign workflows. Users may configure study design selecting different options data source, research target, analytical target. workflows follow stepwise approach, tabs displayed sequentially right sidebar. Irrelevant tabs current workflow automatically hidden. Step 1. Data source: Users can specify data source: Upload: Import dataset local file. Select: Choose pre-existing datasets available application. Simulate: Generate synthetic data testing modeling purposes. Step 2. Research target: Users can define research targets: Home range: Estimate long-term space-use requirements. Speed & distance: Estimate fine-scale movement metrics, speed distance traveled. Step 3. Analytical target: Users can decide analytical target estimates: Individual estimate: Obtain metrics single individual. Mean estimate sampled population: Obtain mean estimate across sampled group. Compare estimates two sampled groups: Perform comparative analysis two groups within tracked population (detection sub-groups). Additionally, users option : Add individual variation: Include variation among individuals simulations (available mean estimate comparisons). Go detailed information regarding Individual estimate workflow.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/movedesign.html","id":"related-work","dir":"Articles","previous_headings":"","what":"Related work","title":"movedesign","text":"ctmm R package ctmmweb Shiny application.","code":""},{"path":[]},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_ind.html","id":"walkthrough","dir":"Articles","previous_headings":"","what":"Walkthrough","title":"Walkthrough (single estimate)","text":"workflow presented Silva et al. (2023), simplified case study, designed quick execution. use GPS tracking dataset African buffalos (Syncerus caffer) tracked Kruger National Park 2005 2006 (Cross et al., 2009), inform simulations. primary goal reliably estimate home range area single African Buffalo.  First, navigate (1) 'Select data' tab load dataset available within package. , move (2) 'Sampling design' tab define sampling duration interval. Finally, proceed (3) 'Analyses' tabs. Afterwards, can review detailed summary outputs 'Report' tab. Please choose Select data source choose list available species. , set Home range Speed & distance research targets. analytical target, choose Individual estimate. navigating 'Select data' tab, can choose seven species available ctmm package. Parameters extracted species can inform tracking studies species similar movement behaviors. First, select African Buffalo (Syncerus caffer) study species. dropdown menu, select Cilla focal individual click 'Validate' button. choosing individual, must ensure accurately represents movement behavior aim emulate. validation step ensures can detect position autocorrelation timescale (τp\\tau_p), essential home range estimation, velocity autocorrelation timescale (τv\\tau_v), speed & distance estimation. validation successful, button now read 'Validated!' Proceed clicking 'Extract' button.  Next, navigate 'Sampling design' tab. , evaluate intended sampling design future tracking project, simulating data conditioned extracted movement parameters. Step 1. Select tracking device: Choose GPS/Satellite logger tracking device. GPS/Satellite loggers automate sampling using satellite systems. However, sampling duration sampling interval inherently limited GPS battery life. tradeoff determines much data can collected time. Step 2. Adjust battery life fix rate: , can configure two key parameters: GPS battery life, expected operational duration GPS device, Maximum GPS fix rate, longest possible time interval recorded locations (fixes) duration. device manufacturer typically provides information, listed model’s documentation. Now, adjust settings follows: set GPS battery life 2 years, set Maximum GPS fix rate 1 fix every 6 hours. , sampling parameters plot, choose sampling interval 2 hours. Step 3 (optional). Add device limitations: may include device limitations, location error success fix rate, understand precision reliability sampling schedule various conditions. Change Fix success rate (%) 85%, Location error 10 meters. Step 4. Validate run simulation: Click ‘Validate’ button reads ‘Validated!’, click ‘Run’ button. Two notifications appear: first calculation expected run time, second simulation model fitting based current parameters. Wait finish proceeding.  Navigate 'Analyses' tabs. step, use Autocorrelated Kernel Density Estimator (AKDE) (Fleming et al., 2015; Silva et al., 2022), available ctmm R package, estimate home range area. introduction box 'Home range' tab: Step 1. Run estimation: Click Run estimation generate home range estimate. Step 2. Interpret outputs: tab presents three key outputs: Estimate: computed home range size, accompanied 95% confidence interval (low–high) account uncertainty. Relative error (%): percentage deviation estimate CIs true home range. Lower error values indicate precise estimate. Effective sample size (Narea): number home range crossing events, influences reliability estimate. Given current sampling parameters (sampling interval one fix every 2 hours realized duration 10.1 months), Narea ≈ 42, indicating approximately 42 home range crossing events occurred within sampling period. visualization compares estimated home range true home range. Ideally, point estimate closely match true home range. 95% confidence intervals narrow possible tightly follow point estimate. case study, single simulation yielded wide confidence intervals, suggesting high uncertainty suggesting longer sampling duration may necessary. However, relative error low, indicating additional data collection may substantially change point estimates, narrow confidence intervals.  step, using continuous-time speed & distance (CTSD) estimator (Noonan et al., 2019), available ctmm R package. introduction box 'Speed & distance' tab: Step 1. Run estimation: Click Run estimation estimate speed & distance. Step 2. Interpret outputs: output types identical 'Home range' tab. However, case, apply distance (comparing trajectory derived selected sampling schedule true fine-scale trajectory, shown grey), speed. Ideally, closely align truth. Wide confidence intervals indicate high uncertainty, suggesting shorter sampling interval may necessary improve accuracy. Given current sampling parameters (sampling interval one fix every 2 hours realized duration 10.1 months), Nspeed ≈ 1,127. equivalent 1,127 independently sampled velocities. higher Nspeed enhances estimate precision reduces uncertainty.  Click Build report button generate detailed evaluation well sampling design meets research targets. report compiles settings outputs one place, helping us assess whether sampling parameters sufficient reliable home range area estimate, /speed distance estimate. Use report fine-tune sampling design ensure robust outputs.  can compare results simulations based similar timescales sampling parameters, allowing quick assessment consistency.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_ind.html","id":"data","dir":"Articles","previous_headings":"Walkthrough","what":"Data","title":"Walkthrough (single estimate)","text":"navigating 'Select data' tab, can choose seven species available ctmm package. Parameters extracted species can inform tracking studies species similar movement behaviors. First, select African Buffalo (Syncerus caffer) study species. dropdown menu, select Cilla focal individual click 'Validate' button. choosing individual, must ensure accurately represents movement behavior aim emulate. validation step ensures can detect position autocorrelation timescale (τp\\tau_p), essential home range estimation, velocity autocorrelation timescale (τv\\tau_v), speed & distance estimation. validation successful, button now read 'Validated!' Proceed clicking 'Extract' button.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_ind.html","id":"sampling-design","dir":"Articles","previous_headings":"Walkthrough","what":"Sampling design","title":"Walkthrough (single estimate)","text":"Next, navigate 'Sampling design' tab. , evaluate intended sampling design future tracking project, simulating data conditioned extracted movement parameters. Step 1. Select tracking device: Choose GPS/Satellite logger tracking device. GPS/Satellite loggers automate sampling using satellite systems. However, sampling duration sampling interval inherently limited GPS battery life. tradeoff determines much data can collected time. Step 2. Adjust battery life fix rate: , can configure two key parameters: GPS battery life, expected operational duration GPS device, Maximum GPS fix rate, longest possible time interval recorded locations (fixes) duration. device manufacturer typically provides information, listed model’s documentation. Now, adjust settings follows: set GPS battery life 2 years, set Maximum GPS fix rate 1 fix every 6 hours. , sampling parameters plot, choose sampling interval 2 hours. Step 3 (optional). Add device limitations: may include device limitations, location error success fix rate, understand precision reliability sampling schedule various conditions. Change Fix success rate (%) 85%, Location error 10 meters. Step 4. Validate run simulation: Click ‘Validate’ button reads ‘Validated!’, click ‘Run’ button. Two notifications appear: first calculation expected run time, second simulation model fitting based current parameters. Wait finish proceeding.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_ind.html","id":"analyses","dir":"Articles","previous_headings":"Walkthrough","what":"Analyses","title":"Walkthrough (single estimate)","text":"Navigate 'Analyses' tabs. step, use Autocorrelated Kernel Density Estimator (AKDE) (Fleming et al., 2015; Silva et al., 2022), available ctmm R package, estimate home range area. introduction box 'Home range' tab: Step 1. Run estimation: Click Run estimation generate home range estimate. Step 2. Interpret outputs: tab presents three key outputs: Estimate: computed home range size, accompanied 95% confidence interval (low–high) account uncertainty. Relative error (%): percentage deviation estimate CIs true home range. Lower error values indicate precise estimate. Effective sample size (Narea): number home range crossing events, influences reliability estimate. Given current sampling parameters (sampling interval one fix every 2 hours realized duration 10.1 months), Narea ≈ 42, indicating approximately 42 home range crossing events occurred within sampling period. visualization compares estimated home range true home range. Ideally, point estimate closely match true home range. 95% confidence intervals narrow possible tightly follow point estimate. case study, single simulation yielded wide confidence intervals, suggesting high uncertainty suggesting longer sampling duration may necessary. However, relative error low, indicating additional data collection may substantially change point estimates, narrow confidence intervals.  step, using continuous-time speed & distance (CTSD) estimator (Noonan et al., 2019), available ctmm R package. introduction box 'Speed & distance' tab: Step 1. Run estimation: Click Run estimation estimate speed & distance. Step 2. Interpret outputs: output types identical 'Home range' tab. However, case, apply distance (comparing trajectory derived selected sampling schedule true fine-scale trajectory, shown grey), speed. Ideally, closely align truth. Wide confidence intervals indicate high uncertainty, suggesting shorter sampling interval may necessary improve accuracy. Given current sampling parameters (sampling interval one fix every 2 hours realized duration 10.1 months), Nspeed ≈ 1,127. equivalent 1,127 independently sampled velocities. higher Nspeed enhances estimate precision reduces uncertainty.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_ind.html","id":"home-range-estimation","dir":"Articles","previous_headings":"Walkthrough","what":"Home range estimation","title":"Walkthrough (single estimate)","text":"step, use Autocorrelated Kernel Density Estimator (AKDE) (Fleming et al., 2015; Silva et al., 2022), available ctmm R package, estimate home range area. introduction box 'Home range' tab: Step 1. Run estimation: Click Run estimation generate home range estimate. Step 2. Interpret outputs: tab presents three key outputs: Estimate: computed home range size, accompanied 95% confidence interval (low–high) account uncertainty. Relative error (%): percentage deviation estimate CIs true home range. Lower error values indicate precise estimate. Effective sample size (Narea): number home range crossing events, influences reliability estimate. Given current sampling parameters (sampling interval one fix every 2 hours realized duration 10.1 months), Narea ≈ 42, indicating approximately 42 home range crossing events occurred within sampling period. visualization compares estimated home range true home range. Ideally, point estimate closely match true home range. 95% confidence intervals narrow possible tightly follow point estimate. case study, single simulation yielded wide confidence intervals, suggesting high uncertainty suggesting longer sampling duration may necessary. However, relative error low, indicating additional data collection may substantially change point estimates, narrow confidence intervals.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_ind.html","id":"speed-distance-estimation","dir":"Articles","previous_headings":"Walkthrough","what":"Speed & distance estimation","title":"Walkthrough (single estimate)","text":"step, using continuous-time speed & distance (CTSD) estimator (Noonan et al., 2019), available ctmm R package. introduction box 'Speed & distance' tab: Step 1. Run estimation: Click Run estimation estimate speed & distance. Step 2. Interpret outputs: output types identical 'Home range' tab. However, case, apply distance (comparing trajectory derived selected sampling schedule true fine-scale trajectory, shown grey), speed. Ideally, closely align truth. Wide confidence intervals indicate high uncertainty, suggesting shorter sampling interval may necessary improve accuracy. Given current sampling parameters (sampling interval one fix every 2 hours realized duration 10.1 months), Nspeed ≈ 1,127. equivalent 1,127 independently sampled velocities. higher Nspeed enhances estimate precision reduces uncertainty.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_ind.html","id":"report","dir":"Articles","previous_headings":"Walkthrough","what":"Report","title":"Walkthrough (single estimate)","text":"Click Build report button generate detailed evaluation well sampling design meets research targets. report compiles settings outputs one place, helping us assess whether sampling parameters sufficient reliable home range area estimate, /speed distance estimate. Use report fine-tune sampling design ensure robust outputs.  can compare results simulations based similar timescales sampling parameters, allowing quick assessment consistency.","code":""},{"path":[]},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_pop.html","id":"walkthrough","dir":"Articles","previous_headings":"","what":"Walkthrough","title":"Walkthrough (population-level)","text":"workflow Silva et al. (prep), simplified case study, designed quick execution. use GPS tracking dataset African buffalos (Syncerus caffer) tracked Kruger National Park 2005 2006 (Cross et al., 2009), inform simulations. primary goal reliably estimate mean home range area population African Buffalos. Please see manuscript detailed workflow, incorporating research targets. Similarly single estimate vignette, begin selecting appropriate workflow Home tab. Please check vignette first, information omitted avoid repetition. tutorial, showcase workflow deploying set number units. Please choose Select data source choose list available species. , set Home range research target. analytical target, choose Mean estimate sampled population. new option show deployment; please select \"plan deploy set number VHF/GPS tags.\" addition, tick Add individual variation checkbox. allows us account individual differences, rather assuming individuals behave identically. Differently single estimate workflow, now able select multiple individuals, enable us extract population-level species parameters. First, select African Buffalo (Syncerus caffer) study species. dropdown menu, select six individuals click 'Validate' button. validation successful, button now read 'Validated!'.  proceeding , visually inspect variograms confirm range-residency Variogram tab Data Visualization box. Variograms allow users check semivariance reaches asymptote, facilitate cursory confirmation range residency (Calabrese et al., 2016; Silva et al., 2022). Downstream results may unreliable violate range residency assumption , point onward, movedesign application operate assumption data originates range-resident species.  tutorial, proceed six individuals. real workflow, however, likely exclude Gabs proceed remaining individuals. Proceed clicking 'Extract' button. Upon successful extraction, Displaying parameters box presents extracted species parameters: position autocorrelation (τp\\tau_p) velocity autocorrelation timescale (τv\\tau_v). African buffalos, mean τp\\tau_p 10.1 days (95% CI: 6.9, 14.7), mean τv\\tau_v 32.5 minutes (95% CI: 24.9, 42.6). parameters serve foundation subsequent simulations evaluate study design. Next, navigate 'Sampling design' tab, input sampling parameters. tutorial, consider following sampling schedule: sampling duration 3 months, 12 new locations collected per day (sampling interval 2 hours). set particular schedule, ensure GPS/Satellite logger selected first dropdown menu, untick Select plot checkbox Device settings box proceeding, prompt us manually input sampling interval. , set GPS battery life (equivalent maximum sampling duration) 3 months sampling interval evaluate? 2 hours. incorporate three additional components: fix success rate (expected , average, 85%), reflecting reliability GPS signal; tag failure (5% chance tag failing data collection); location error (averaging 15 meters). Please Enable three settings. point, click Validate button (verifying switches Validated!) , afterwards, Run button.  message appears confirming step successfully completed, proceed Home range tab Analyses. start estimation process, click Run estimation button located top box. can now see outputs single simulation, providing starting point. relative error home range area overestimation 4.5% (95% CI: -56.9, 344%). Note due randomized nature seed generation inclusion individual variation, values may differ substantially across runs. can view outputs simulation using Show simulation .: slider. importantly, Simulations box (top right corner), set total number tags error threshold. set error threshold estimates ±5%, total number tags 20 individuals, clicking Simulate button. message appears, indicating expected runtime; must wait process complete can explore outputs. Next, Meta-analyses tab, click Run meta-analyses button obtain information population-level inferences. completed, new box left indicates , average, population-level home range area underestimated -11% (-29.2, 9.6%). addition, two plots generated: first individual estimates home range areas, population-level estimates home range areas.  first plot illustrates relative error individual-level home range area estimates displaying estimated home range area (x-axis, km²) individual (y-axis), along associated 95% confidence intervals. black square represents population-level estimate (mean across individuals) corresponding 95% confidence interval. vertical solid line indicate expected true value inputted species parameters. second plot illustrates increasing number individuals (population sample size 2 maximum 20) affects population-level mean estimates. point represents mean relative error (%) metric associated 95% confidence intervals, plotted number tracked individuals. dashed horizontal lines indicate predefined error threshold ±5%. accompanying table provides detailed numerical values, well whether sub-population detected population sample size. verify outputs, can resample combination testing assess spread estimates, randomly reassigning individuals new sets rerunning estimation population-level mean estimates multiple times.  step helps evaluate individual estimates contribute variation observed mean estimate. set number resamples 15 , though higher values recommended larger population samples. clicking Resample button, new plot illustrates different sets individuals shape observed mean estimate across increasing population sample sizes. Variation remains high, indicating additional simulations may needed stabilize mean home range estimate. Finally, Report tab, clicking Build report generates comprehensive summary sampling schedule outputs. report consolidates key findings, highlighting current sampling effort affects estimation accuracy. Specifically, reveals population sample size 20 individuals fails meet ±5% error threshold mean home range area, suggesting insufficient data achieve reliable estimates. Although confidence intervals overlap error margins, observed individual variation may still lead inaccurate conclusions. report provides clear visual representation uncertainties, allowing us assess whether adjustments sampling schedule necessary.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_pop.html","id":"data","dir":"Articles","previous_headings":"Walkthrough","what":"Data","title":"Walkthrough (population-level)","text":"Differently single estimate workflow, now able select multiple individuals, enable us extract population-level species parameters. First, select African Buffalo (Syncerus caffer) study species. dropdown menu, select six individuals click 'Validate' button. validation successful, button now read 'Validated!'.  proceeding , visually inspect variograms confirm range-residency Variogram tab Data Visualization box. Variograms allow users check semivariance reaches asymptote, facilitate cursory confirmation range residency (Calabrese et al., 2016; Silva et al., 2022). Downstream results may unreliable violate range residency assumption , point onward, movedesign application operate assumption data originates range-resident species.  tutorial, proceed six individuals. real workflow, however, likely exclude Gabs proceed remaining individuals. Proceed clicking 'Extract' button. Upon successful extraction, Displaying parameters box presents extracted species parameters: position autocorrelation (τp\\tau_p) velocity autocorrelation timescale (τv\\tau_v). African buffalos, mean τp\\tau_p 10.1 days (95% CI: 6.9, 14.7), mean τv\\tau_v 32.5 minutes (95% CI: 24.9, 42.6). parameters serve foundation subsequent simulations evaluate study design.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_pop.html","id":"sampling-design","dir":"Articles","previous_headings":"Walkthrough","what":"Sampling design","title":"Walkthrough (population-level)","text":"Next, navigate 'Sampling design' tab, input sampling parameters. tutorial, consider following sampling schedule: sampling duration 3 months, 12 new locations collected per day (sampling interval 2 hours). set particular schedule, ensure GPS/Satellite logger selected first dropdown menu, untick Select plot checkbox Device settings box proceeding, prompt us manually input sampling interval. , set GPS battery life (equivalent maximum sampling duration) 3 months sampling interval evaluate? 2 hours. incorporate three additional components: fix success rate (expected , average, 85%), reflecting reliability GPS signal; tag failure (5% chance tag failing data collection); location error (averaging 15 meters). Please Enable three settings. point, click Validate button (verifying switches Validated!) , afterwards, Run button.  message appears confirming step successfully completed, proceed Home range tab Analyses.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_pop.html","id":"analyses","dir":"Articles","previous_headings":"Walkthrough","what":"Analyses","title":"Walkthrough (population-level)","text":"start estimation process, click Run estimation button located top box. can now see outputs single simulation, providing starting point. relative error home range area overestimation 4.5% (95% CI: -56.9, 344%). Note due randomized nature seed generation inclusion individual variation, values may differ substantially across runs. can view outputs simulation using Show simulation .: slider. importantly, Simulations box (top right corner), set total number tags error threshold. set error threshold estimates ±5%, total number tags 20 individuals, clicking Simulate button. message appears, indicating expected runtime; must wait process complete can explore outputs.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_pop.html","id":"home-range-estimation","dir":"Articles","previous_headings":"Walkthrough","what":"Home range estimation","title":"Walkthrough (population-level)","text":"start estimation process, click Run estimation button located top box. can now see outputs single simulation, providing starting point. relative error home range area overestimation 4.5% (95% CI: -56.9, 344%). Note due randomized nature seed generation inclusion individual variation, values may differ substantially across runs. can view outputs simulation using Show simulation .: slider. importantly, Simulations box (top right corner), set total number tags error threshold. set error threshold estimates ±5%, total number tags 20 individuals, clicking Simulate button. message appears, indicating expected runtime; must wait process complete can explore outputs.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_pop.html","id":"meta-analyses","dir":"Articles","previous_headings":"Walkthrough","what":"Meta-analyses","title":"Walkthrough (population-level)","text":"Next, Meta-analyses tab, click Run meta-analyses button obtain information population-level inferences. completed, new box left indicates , average, population-level home range area underestimated -11% (-29.2, 9.6%). addition, two plots generated: first individual estimates home range areas, population-level estimates home range areas.  first plot illustrates relative error individual-level home range area estimates displaying estimated home range area (x-axis, km²) individual (y-axis), along associated 95% confidence intervals. black square represents population-level estimate (mean across individuals) corresponding 95% confidence interval. vertical solid line indicate expected true value inputted species parameters. second plot illustrates increasing number individuals (population sample size 2 maximum 20) affects population-level mean estimates. point represents mean relative error (%) metric associated 95% confidence intervals, plotted number tracked individuals. dashed horizontal lines indicate predefined error threshold ±5%. accompanying table provides detailed numerical values, well whether sub-population detected population sample size. verify outputs, can resample combination testing assess spread estimates, randomly reassigning individuals new sets rerunning estimation population-level mean estimates multiple times.  step helps evaluate individual estimates contribute variation observed mean estimate. set number resamples 15 , though higher values recommended larger population samples. clicking Resample button, new plot illustrates different sets individuals shape observed mean estimate across increasing population sample sizes. Variation remains high, indicating additional simulations may needed stabilize mean home range estimate.","code":""},{"path":"https://ecoisilva.github.io/movedesign/articles/tutorial_pop.html","id":"report","dir":"Articles","previous_headings":"Walkthrough","what":"Report","title":"Walkthrough (population-level)","text":"Finally, Report tab, clicking Build report generates comprehensive summary sampling schedule outputs. report consolidates key findings, highlighting current sampling effort affects estimation accuracy. Specifically, reveals population sample size 20 individuals fails meet ±5% error threshold mean home range area, suggesting insufficient data achieve reliable estimates. Although confidence intervals overlap error margins, observed individual variation may still lead inaccurate conclusions. report provides clear visual representation uncertainties, allowing us assess whether adjustments sampling schedule necessary.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Inês Silva. Maintainer, author, copyright holder.","code":""},{"path":"https://ecoisilva.github.io/movedesign/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Silva, ., Fleming, C. H., Noonan, M. J., Fagan, W. F., & Calabrese, J. M. (2023). movedesign: Shiny R app evaluate sampling design animal movement studies. Methods Ecology Evolution, 14(9), 2216-2225.","code":"@Article{,   doi = {10.1111/2041-210X.14153},   year = {2023},   author = {Ines Silva and Christen H. Fleming and Michael J. Noonan and William F. Fagan and Justin M. Calabrese},   title = {movedesign: Shiny R app to evaluate sampling design for animal tracking movement studies},   journal = {Methods in Ecology and Evolution}, }"},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"movedesign","text":"movedesign R package Shiny application designed support researchers planning evaluation movement ecology studies, focusing two key targets: estimating home range areas, estimating movement speed distance traveled. Movement ecology studies frequently make use data collected animal tracking projects. Planning successful animal tracking project requires careful consideration clear objectives. crucial plan ahead understand much data required accurately answer chosen research questions, choose optimal tracking regime/schedule. assist study design, movedesign integrates continuous-time methods available ctmm R package. Animal movement inherently autocorrelated (locations similar function space time) ctmm package allows us model data continuous-time stochastic processes, dealing known biases (small sample sizes, irregular missing data, location error). app built using golem framework.","code":""},{"path":"https://ecoisilva.github.io/movedesign/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation:","title":"movedesign","text":"install stable version movedesign CRAN: install recent development version directly GitHub: encounter issues, consult installation troubleshooting vignette potential solutions.","code":"install.packages(\"movedesign\") install.packages(\"remotes\") remotes::install_github(\"ecoisilva/movedesign\")"},{"path":"https://ecoisilva.github.io/movedesign/index.html","id":"running-the-application","dir":"","previous_headings":"","what":"Running the application:","title":"movedesign","text":"launch movedesign, load library run following command R console:","code":"library(movedesign) movedesign::run_app()"},{"path":"https://ecoisilva.github.io/movedesign/index.html","id":"using-the-application","dir":"","previous_headings":"","what":"Using the application:","title":"movedesign","text":"Start guided tutorial 'Home' tab. detailed introduction, refer vignettes manuscripts (references ).","code":""},{"path":"https://ecoisilva.github.io/movedesign/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help:","title":"movedesign","text":"encounter bug, please submit issue. general questions suggestions, contact Inês Silva.","code":""},{"path":"https://ecoisilva.github.io/movedesign/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation:","title":"movedesign","text":"cite movedesign, use following: Silva, ., Fleming, C. H., Noonan, M. J., Fagan, W. F., & Calabrese, J. M. (2023). movedesign: Shiny R app evaluate sampling design animal movement studies. Methods Ecology Evolution, 14(9), 2216–2225. DOI: 10.1111/2041-210X.14153","code":"citation(\"movedesign\")"},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_hr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate home range from simulated movement data — estimate_hr","title":"Estimate home range from simulated movement data — estimate_hr","text":"Estimates home range areas simulated movement dataset using Autocorrelated Kernel Density Estimator (AKDE) via ctmm::akde(). function intended use within simulation workflows home range calculations needed simulated individual.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_hr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate home range from simulated movement data — estimate_hr","text":"","code":"estimate_hr(rv)"},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_hr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate home range from simulated movement data — estimate_hr","text":"rv reactiveValues list containing, minimum: simList: list simulated movement datasets (e.g., telemetry tracks). simfitList: list fitted movement models, corresponding entry simList. movement dataset simList compatible ctmm::akde(), fitted model simfitList correspond respective simulated dataset.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_hr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate home range from simulated movement data — estimate_hr","text":"named list ctmm objects, representing AKDE home range estimate corresponding simulation. AKDE estimation fails simulation (e.g., due poor model fit data issues), result simulation NULL.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_hr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate home range from simulated movement data — estimate_hr","text":"function intended internal use may assume inputs follow specific structure constraints referenced explicitly.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate movement speed for simulated movement data — estimate_speed","title":"Estimate movement speed for simulated movement data — estimate_speed","text":"Calculates continuous-time speed distance (CTSD) simulated movement dataset using corresponding fitted movement model ctmm::speed(). function designed simulation workflows speed metrics required simulated individual.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate movement speed for simulated movement data — estimate_speed","text":"","code":"estimate_speed(rv)"},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate movement speed for simulated movement data — estimate_speed","text":"rv reactiveValues list containing, minimum: simList: list simulated movement datasets (e.g., telemetry tracks). simfitList: list fitted movement models, corresponding entry simList. element simList compatible ctmm::speed(), model simfitList correspond respective simulated dataset.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate movement speed for simulated movement data — estimate_speed","text":"named list speed estimates (ctmm objects), one entry per simulation.simulation speed estimation fails (e.g., due model fitting issues incompatible data), NULL returned entry omitted final output.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/estimate_speed.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate movement speed for simulated movement data — estimate_speed","text":"function intended internal use may assume inputs follow specific structure constraints referenced explicitly.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/fitting_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit continuous-time movement models — fitting_model","title":"Fit continuous-time movement models — fitting_model","text":"function fits continuous-time movement models simulated location data using ctmm package. estimates movement parameters simulated trajectory, optionally running parallel efficiency. supports home range speed estimation workflows.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/fitting_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit continuous-time movement models — fitting_model","text":"","code":"fitting_model(obj, set_target = c(\"hr\", \"ctsd\"), ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/fitting_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit continuous-time movement models — fitting_model","text":"obj list simulated movement datasets, formatted telemetry object compatible ctmm. set_target character vector specifying research goals. Options include: \"hr\" — Home range estimation. \"ctsd\" — Speed distance estimation. ... Optional control parameters passed via .... include .dur, .dti, .tau_p, .tau_v, .error_m, .check_sampling, .rerun, .parallel, .trace. See Details descriptions.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/fitting_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit continuous-time movement models — fitting_model","text":"list fitted movement models (class ctmm), one per simulation. model recentered origin (x = 0, y = 0).","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/fitting_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit continuous-time movement models — fitting_model","text":"function generates initial parameter estimates dataset using ctmm::ctmm.guess(). data includes simulated location error, uses error model accordingly. .check_sampling TRUE, compares sampling duration interval optimal thresholds derived provided autocorrelation timescales. Models fitted using ctmm::ctmm.select(), performs model selection find best-fit movement process. .rerun enabled, function identifies simulations effective sample sizes 0.1 attempts reselect models . Finally, fitted models recentered (0, 0) downstream consistency. following arguments can supplied via ...: .dur: list elements value (numeric) unit (string), specifying maximum study duration. Example: list(value = 2, unit = \"months\"). .dti: list elements value (numeric) unit (string), specifying intended sampling interval. Example: list(value = 1, unit = \"day\"). .tau_p: list position autocorrelation timescales. Optional, required .check_sampling = TRUE. .tau_v: list velocity autocorrelation timescales. Optional, required .check_sampling = TRUE. .error_m: numeric value specifying location error meters (used simulation). .check_sampling: Logical; TRUE, checks whether sampling schedule meets minimum requirements reliable model fitting via ctmm::ctmm.fit(). feature experimental may change future versions. .rerun: Logical; TRUE, re-runs model selection simulations result low effective sample sizes, avoid convergence issues. .parallel: Logical; TRUE, enables parallel computation. .trace: Logical; TRUE, print progress timing messages console.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/fitting_model.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit continuous-time movement models — fitting_model","text":"function intended internal use may assume inputs follow specific structure constraints referenced explicitly.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/fixrates.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix rates of animal tracking devices. — fixrates","title":"Fix rates of animal tracking devices. — fixrates","text":"dataset listing typical GPS fix rates animal tracking devices. Useful selecting typical sampling schedules wildlife tracking projects.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/fixrates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix rates of animal tracking devices. — fixrates","text":"","code":"fixrates"},{"path":"https://ecoisilva.github.io/movedesign/reference/fixrates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fix rates of animal tracking devices. — fixrates","text":"data.frame 40 rows 7 variables: dti_notes Human-readable fix schedule, e.g., \"1 fix every month\". Helps interpret sampling intervals practical terms. dti Sampling interval seconds, .e., time consecutive location fixes. frq Sampling frequency seconds, .e., often fix occurs (inverse dti). frq_hrs Sampling frequency hours, offering intuitive unit comparison. highlighted Logical. TRUE fix rate commonly used animal tracking studies. Useful identifying standard settings.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess output convergence in simulation outputs — md_check","title":"Assess output convergence in simulation outputs — md_check","text":"Evaluates whether cumulative mean tracked error metric simulation outputs stabilized, indicating convergence. function helps determine repeated simulations resampling produced stable estimates, critical reliable inference animal movement projects. Use function running md_run() md_replicate() check reliability outputs interpretation reporting.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess output convergence in simulation outputs — md_check","text":"","code":"md_check(   obj,   m = NULL,   tol = 0.05,   n_converge = 10,   plot = TRUE,   pal = c(\"#007d80\", \"#A12C3B\") )"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess output convergence in simulation outputs — md_check","text":"obj movedesign related object returned md_run() md_replicate(). m Numeric (optional). provided, restricts convergence check results specific population sample size (m). Defaults NULL, checks maximum population sample size. tol Numeric. tolerance threshold absolute change cumulative mean declare convergence. Defaults 0.05. n_converge Integer. Number consecutive steps within tolerance required confirm convergence. Defaults 10. plot Logical. TRUE (default), generates plot stepwise changes cumulative mean, highlighting convergence achieved. pal Character vector color(s) plot, c(\"#007d80\", \"#A12C3B\")) (default).","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess output convergence in simulation outputs — md_check","text":"object class \"movedesign_check\" following elements: has_converged Logical scalar indicating whether convergence achieved. recent_deltas Numeric vector absolute changes cumulative mean last n_converge steps. max_delta Maximum absolute change among last steps. tolerance Numeric, input tolerance tol. n_converge Integer, input n_converge. variable Character. Name variable checked. recent_cummean Numeric vector. last cumulative means checked.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assess output convergence in simulation outputs — md_check","text":"cumulative mean error calculated, absolute changes last n_converge steps inspected. specified tolerance, convergence declared. plot = TRUE, plot shown absolute stepwise change cumulative mean, shaded region indicating convergence threshold, aiding visual assessment.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/md_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess output convergence in simulation outputs — md_check","text":"","code":"if(interactive()) {   # After running a simulation or resampling:   md_check(output, tol = 0.05, n_converge = 10) }"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_configure.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively configure movement design setup — md_configure","title":"Interactively configure movement design setup — md_configure","text":"Guides user assign argument required movement design workflow, including species label key simulation settings. Users may choose set specific population sample size (number animals tagged/tagged) optimize population sample size considering specific analytical target.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_configure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively configure movement design setup — md_configure","text":"","code":"md_configure(data, models = NULL)"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_configure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively configure movement design setup — md_configure","text":"data named list telemetry objects (ctmm::.telemetry()) used empirical basis simulations. telemetry object must contain valid metadata timestamped locations. models (Optional) Named list fitted ctmm models (ctmm::ctmm.fit() ctmm::ctmm.select()). supplied, models fitted automatically.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_configure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactively configure movement design setup — md_configure","text":"object class movedesign_input (movedesign). structured S3 list containing validated inputs, model fits, derived parameters study design workflow.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_configure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactively configure movement design setup — md_configure","text":"argument data required must supplied directly (list telemetry objects, obtained ctmm::.telemetry()). Arguments defaults can skipped using . argument models optional, omitted, models fitted automatically.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/md_configure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactively configure movement design setup — md_configure","text":"","code":"if(interactive()) {   data(buffalo)   md_params <- md_configure(data = buffalo) }"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge multiple simulation outputs — md_merge","title":"Merge multiple simulation outputs — md_merge","text":"Merges results multiple simulation runs, produced md_run(), single unified movedesign_output object. especially useful running replicate simulations power analyses, sensitivity testing, batch processing. Merging allows aggregate simulated individuals, outputs, related metadata, enabling streamlined downstream analyses.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge multiple simulation outputs — md_merge","text":"","code":"md_merge(...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge multiple simulation outputs — md_merge","text":"... One objects class movedesign_preprocess, typically generated md_run(). object must contain, minimum, elements simList, simfitList, seedList. Optional elements akdeList ctsdList merged present.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge multiple simulation outputs — md_merge","text":"single movedesign_output object contains merged simulation outputs inherits metadata first input object. output includes: Merged list simulated individuals (simList), Merged list fitted models (simfitList), Merged list seeds used simulation replicate (seedList), Optionally, merged home range (akdeList) speed (ctsdList) outputs, Relevant metadata describing study design parameters.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/md_merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge multiple simulation outputs — md_merge","text":"","code":"if (interactive()) {   input <- md_prepare(     data = buffalo,     models = models,     species = \"buffalo\",     n_individuals = 5,     dur = list(value = 1, unit = \"month\"),     dti = list(value = 1, unit = \"day\"),     add_individual_variation = TRUE,     grouped = FALSE,     set_target = \"hr\",     which_meta = \"mean\"   )    output1 <- md_run(input)   output2 <- md_run(input)    merged <- md_merge(output1, output2) }"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_optimize.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize population sample size and sampling parameters — md_optimize","title":"Optimize population sample size and sampling parameters — md_optimize","text":"Repeatedly simulates movement datasets across range candidate population sample sizes identify minimal sample size associated sampling parameters (e.g., duration, sampling interval) required achieve predefined error threshold key space-use movement metrics (home range area, speed). function quantifies estimation error metric sample size, evaluates population sample size reliably meets target thresholds, reports final recommendations.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_optimize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize population sample size and sampling parameters — md_optimize","text":"","code":"md_optimize(   obj,   n_replicates = NULL,   error_threshold = NULL,   verbose = FALSE,   trace = TRUE,   parallel = FALSE,   ncores = parallel::detectCores(),   plot = FALSE,   ... )"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_optimize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize population sample size and sampling parameters — md_optimize","text":"obj movement design input object (see md_prepare() md_configure()). n_replicates Integer. Number simulation replicates candidate sample size. error_threshold Numeric. Error threshold (e.g. 0.05 5%) display reference plot. verbose Logical. TRUE (default), prints summary convergence check console. trace Logical; TRUE (default), prints progress timing messages console. parallel Logical; TRUE, enables parallel processing. Default FALSE. ncores Integer; number CPU cores use parallel processing. Defaults available cores detected parallel::detectCores(). plot Logical. TRUE, displays diagnostic plot final results. ... Additional arguments used internally.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_optimize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize population sample size and sampling parameters — md_optimize","text":"list class movedesign_report containing: summary: Data frame summary statistics replicate, sample size, metric. error_threshold: Numeric. error threshold used. sampling_duration: Character string. Final sampling duration. sampling_interval: Character string. Final sampling interval. sample_size_achieved: Logical. Indicates convergence achieved threshold met. minimum_population_sample_size: Integer. Minimum sample size achieving threshold (maximum evaluated sample_size_achieved FALSE).","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_optimize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimize population sample size and sampling parameters — md_optimize","text":"function iteratively runs movement design simulations increasing population sample sizes (m), evaluating error replicate metric via meta-analyses. Convergence checked using error threshold stability cumulative mean error. function stops sample size meets criteria maximum population sample size reached. Results can visualized using plot = TRUE.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_optimize.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Optimize population sample size and sampling parameters — md_optimize","text":"biologgers inherently involve trade-fix frequency battery life. Shorter intervals location fixes offer higher temporal resolution reduce deployment duration due increased power consumption. contrast, longer deployments require less frequent sampling conserve battery. trade-makes challenging estimate multiple metrics differing data needs: high-resolution data (shorter intervals) improve speed estimation, extended deployments (longer durations) vital accurate home range area estimates. sampling design minimizes error one metric may increase error another. Researchers facing constraints consider prioritizing single research target (e.g., either home range area speed), use stratified designs balance data needs across individuals.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/md_optimize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize population sample size and sampling parameters — md_optimize","text":"","code":"if(interactive()) {   obj <- md_configure(data = buffalo,                       models = models)                          out <- md_optimize(tmp,                      n_replicates = 25,                      error_threshold = 0.05,                      plot = TRUE) }"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize study design outputs — md_plot","title":"Visualize study design outputs — md_plot","text":"Produces publication-ready density plot showing distribution relative error estimates study design simulations. plot highlights mean shaded credible interval (CI) region, following computation credible intervals implemented bayestestR::ci(). groups present, density curves group overlaid comparison, using customizable colors. function typically used running md_replicate(), providing visual diagnostic simulation results.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize study design outputs — md_plot","text":"","code":"md_plot(   obj,   ci = 0.95,   method = \"HDI\",   pal = c(\"#007d80\", \"#A12C3B\"),   m = NULL )"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize study design outputs — md_plot","text":"obj movedesign_output object, returned md_replicate(). object must contain summary data frame , minimum, following columns: error Relative error values replicate. error_lci Lower credible interval bound error. error_uci Upper credible interval bound error. group (Optional) Group label comparing densities. ci Numeric scalar 0 1. probability credible interval (CI) estimated. Default 0.95 (⁠95%⁠). method Character. Credible interval estimation method (passed bayestestR::ci(); default: \"HDI\"). See bayestestR::ci() details. pal Character vector color(s) density, CI shading, mean line. single group, supply one color (default: \"#007d80\"). groups present, supply two colors (default: c(\"#007d80\", \"#A12C3B\")). m Numeric (optional). provided, restricts results specific population sample size (m). Defaults NULL, checks maximum population sample size.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize study design outputs — md_plot","text":"ggplot object showing: Density curve(s) relative error distribution. Shaded region central credible interval. Vertical dashed lines mean(s). Overlaid densities multiple groups present. Percent-formatted x-axis interpretation. object can customized additional ggplot2 layers needed.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize study design outputs — md_plot","text":"plot helps users assess reliability simulation outputs visualizing distribution relative errors. multiple groups simulated, plot enables direct visual comparison performance across groups. credible intervals calculated, warning issued density curves displayed. strongly recommended use md_check() assess whether distributions shown stabilized. Checking convergence ensures summary statistics uncertainty estimates depicted plot reliable unduly influenced replicates ongoing variability. Running md_check() helps determine additional simulation replicates needed achieve stable inference design evaluation.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize study design outputs — md_plot","text":"","code":"if (interactive()) {   input <- md_prepare(     data = buffalo,     models = models,     species = \"buffalo\",     n_individuals = 5,     dur = list(value = 1, unit = \"month\"),     dti = list(value = 1, unit = \"day\"),     add_individual_variation = TRUE,     grouped = TRUE,     set_target = \"hr\",     which_meta = \"mean\"   )    output <- md_replicate(input, n_replicates = 20)    # Plot with 80% credible intervals:   md_plot(output, ci = 0.80, method = \"HDI\") }"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Preview plot for movedesign workflow outputs (single replicate) — md_plot_preview","title":"Preview plot for movedesign workflow outputs (single replicate) — md_plot_preview","text":"Generates quick visualization relative error home range movement speed estimation single replicate movedesign workflow. functions shows preliminary outputs used evaluate study design. Use output md_run() (movedesign_preprocess object). Users run md_replicate() full assessment.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preview plot for movedesign workflow outputs (single replicate) — md_plot_preview","text":"","code":"md_plot_preview(obj, error_threshold = 0.05, pal = c(\"#007d80\", \"#A12C3B\"))"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preview plot for movedesign workflow outputs (single replicate) — md_plot_preview","text":"obj object class movedesign_preprocess (output md_run()). error_threshold Numeric. Error threshold (e.g. 0.05 5%) display reference plot. pal Character vector two colors within/outside threshold (default: c(\"#007d80\", \"#A12C3B\")).","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preview plot for movedesign workflow outputs (single replicate) — md_plot_preview","text":"ggplot object displaying relative error population sample size, point estimate confidence intervals mean estimates, horizontal error threshold lines.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot_preview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preview plot for movedesign workflow outputs (single replicate) — md_plot_preview","text":"robust results credible intervals, use md_replicate().","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/md_plot_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preview plot for movedesign workflow outputs (single replicate) — md_plot_preview","text":"","code":"if (interactive()) {   input <- md_prepare(     data = buffalo,     models = models,     species = \"buffalo\",     n_individuals = 5,     dur = list(value = 1, unit = \"month\"),     dti = list(value = 1, unit = \"day\"),     add_individual_variation = TRUE,     grouped = TRUE,     set_target = \"hr\",     which_meta = \"mean\"   )    output <- md_run(input)   md_plot_preview(output, error_threshold = 0.05) }"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare movement study design inputs — md_prepare","title":"Prepare movement study design inputs — md_prepare","text":"Prepares, validates, organizes required inputs parameters evaluating study design animal movement projects. function checks data inputs, fits verifies movement models, extracts key parameters, consolidates settings structured object easy reproducible downstream use.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare movement study design inputs — md_prepare","text":"","code":"md_prepare(   species = NULL,   data,   models = NULL,   n_individuals = NULL,   dur = NULL,   dti = NULL,   set_target = c(\"hr\", \"ctsd\"),   which_meta = \"mean\",   add_individual_variation = FALSE,   groups = NULL,   parallel = FALSE )"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare movement study design inputs — md_prepare","text":"species Character. Scientific common name focal species used workflow label. data named list telemetry objects (ctmm::.telemetry()) used empirical basis simulations. telemetry object must contain valid metadata timestamped locations. models (Optional) Named list fitted ctmm models (ctmm::ctmm.fit() ctmm::ctmm.select()). supplied, models fitted automatically. n_individuals Integer. Number animals (tags) include study design; defines target population sample size. dur list elements value unit (e.g., list(value = 2, unit = \"months\")), study's maximum duration. unit must either \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\". dti list elements value unit (e.g., list(value = 1, unit = \"day\")), specifying intended sampling interval relocations. unit must either \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\". set_target Character. Specifies primary research target(s): must either hr (home range estimation), ctsd (movement speed), character vector including . argument controls target metrics processed, analyzed, reported study design workflow. which_meta Character. Specifies analytical target population-level inference: NULL, \"mean\" (default), \"ratio\". Use NULL single individual, \"mean\" population means, \"ratio\" compare group means (requires groups). add_individual_variation Logical. TRUE, simulates variation drawing movement parameters population distribution. groups (Optional) named list group assignments. element character vector individual names (matching data). example, list(= c(\"id1\", \"id2\"), B = c(\"id3\", \"id4\")) groups \"\" \"B\".Required which_meta = \\\"ratio\\\". parallel Logical. TRUE, enables parallel processing model fitting, speeds analyses.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_prepare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare movement study design inputs — md_prepare","text":"object class movedesign_input (movedesign). structured S3 list containing validated inputs, model fits, derived parameters study design workflow. returned object includes: design: movedesign object study settings metadata. data: original validated list telemetry objects. fitList: List fitted movement models individual. meanfitList: List population group-level mean models. sigma, tau_p, tau_v: Movement parameters extracted data provided downstream simulations. mu: List mean locations. groups: Group structure specified, otherwise NULL. slots describing population sample size, sampling duration, sampling interval, targets, workflow options. object ready use downstream movedesign output diagnostic functions.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_prepare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare movement study design inputs — md_prepare","text":"function designed streamline standardize preparation input data study design parameters simulation-based movement ecology analyses. performs following key steps: Validates data non-empty list telemetry objects metadata location records. Fits movement models individual supplied. Checks supplied movement models validity. Extracts parameters (e.g., sigma, tau_p, tau_v) simulation. Gathers settings (sample size, duration, sampling, grouping) single object.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/md_prepare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare movement study design inputs — md_prepare","text":"","code":"if(interactive()) {   data(buffalo)   input <- md_prepare(     data = buffalo,     models = models,     species = \"buffalo\",     n_individuals = 5,     dur = list(value = 1, unit = \"month\"),     dti = list(value = 1, unit = \"day\"),     add_individual_variation = TRUE,     set_target = \"hr\",     which_meta = \"mean\")  summary(input) }"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_replicate.html","id":null,"dir":"Reference","previous_headings":"","what":"Replicate study design and aggregate simulation outputs — md_replicate","title":"Replicate study design and aggregate simulation outputs — md_replicate","text":"Runs specified movement study design multiple times aggregates outputs summary statistics across independent replicates. enables sensitivity analyses quantifies variability arising random sampling, especially individual-level variation enabled (.e., add_individual_variation = TRUE md_prepare()). Replication helps assess stochasticity design choices impact simulation inference.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_replicate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replicate study design and aggregate simulation outputs — md_replicate","text":"","code":"md_replicate(   obj,   n_replicates,   verbose = FALSE,   trace = TRUE,   parallel = FALSE,   ncores = parallel::detectCores() )"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_replicate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replicate study design and aggregate simulation outputs — md_replicate","text":"obj object class movedesign created md_prepare(). contains parameters input data defining movement study. n_replicates Integer specifying many independent simulation replicates run. verbose Logical; TRUE, runs population-level inferences iteratively increasing population sample sizes, saving results step. Defaults FALSE, runs maximum sample size defined n_individuals md_prepare(). trace Logical; TRUE (default), prints progress timing messages console. parallel Logical; TRUE, enables parallel processing. Default FALSE. ncores Integer; number CPU cores use parallel processing. Defaults available cores detected parallel::detectCores().","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_replicate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replicate study design and aggregate simulation outputs — md_replicate","text":"list class movedesign_output two elements: data: list containing merged simulation outputs replicates. summary: data.table summarizing key statistics replicate.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_replicate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replicate study design and aggregate simulation outputs — md_replicate","text":"replicate runs independently using study design object unique random seed ensure independence. Results replicates merged using md_merge(), summary statistics combine single data.table convenient downstream analyses evaluation. Parallel processing can significantly reduce runtime running many replicates; use ncores specify number CPU cores used. function interrupted (e.g., Ctrl+C), returns results completed replicates point.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/md_replicate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replicate study design and aggregate simulation outputs — md_replicate","text":"","code":"if (interactive()) {   input <- md_prepare(     data = buffalo,     models = models,     species = \"buffalo\",     n_individuals = 5,     dur = list(value = 1, unit = \"month\"),     dti = list(value = 1, unit = \"day\"),     add_individual_variation = TRUE,     grouped = FALSE,     set_target = \"hr\",     which_meta = \"mean\"   )    output <- md_replicate(input, n_replicates = 5) }"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run study design workflow — md_run","title":"Run study design workflow — md_run","text":"Executes complete simulation analysis workflow animal movement study design prepared using md_prepare(). function simulates telemetry data, fits movement models, estimates home ranges /movement speeds, stores results returned object. Progress timing messages printed default.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run study design workflow — md_run","text":"","code":"md_run(design, trace = TRUE)"},{"path":"https://ecoisilva.github.io/movedesign/reference/md_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run study design workflow — md_run","text":"design object class movedesign (movedesign_input), returned md_prepare(), containing study design parameters data. trace Logical. TRUE (default), print progress timing messages console.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run study design workflow — md_run","text":"updated movedesign object (subclass movedesign_preprocess) containing simulation outputs components: simList: List simulated telemetry datasets, one per individual. seedList: List random seeds used reproducibility. simfitList: List fitted movement models simulation. akdeList: List home range (AKDE) estimates, present hr target listed set_target. ctsdList: List continuous-time speed distance (CTSD) estimates, present ctsd target listed set_target.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/md_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run study design workflow — md_run","text":"function ensures reproducibility saving random seeds intermediate results. Progress timing messages help track simulation workflow. Typical workflow: Prepare study design md_prepare(). Run simulations analyses md_run(). Summarize plot outputs returned object.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/md_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run study design workflow — md_run","text":"","code":"if(interactive()) { input <- md_prepare(   data = buffalo,   models = models,   species = \"buffalo\",   n_individuals = 5,   dur = list(value = 1, unit = \"month\"),   dti = list(value = 1, unit = \"day\"),   add_individual_variation = TRUE,   set_target = \"hr\",   which_meta = \"mean\" ) output <- md_run(input) }"},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign-package.html","id":null,"dir":"Reference","previous_headings":"","what":"movedesign: Study design of movement ecology studies — movedesign-package","title":"movedesign: Study design of movement ecology studies — movedesign-package","text":"movedesign package contains R shiny application assists researchers designing movement ecology studies.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"movedesign: Study design of movement ecology studies — movedesign-package","text":"Maintainer: Inês Silva .simoes-silva@hzdr.de (ORCID) [copyright holder]","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a movedesign_input object for simulation workflows — movedesign_input","title":"Create a movedesign_input object for simulation workflows — movedesign_input","text":"Constructs S3 object class movedesign_input, encapsulating parameters metadata required simulation-based study design. object includes elements number individuals (population sample size), study duration, sampling interval, movement models, grouping structure (specified), estimation targets. standardized movedesign_input object expected input downstream movedesign functions. Use md_prepare() construct complete study design input object, can passed functions like md_run() md_replicate().","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a movedesign_input object for simulation workflows — movedesign_input","text":"","code":"movedesign_input(design)"},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a movedesign_input object for simulation workflows — movedesign_input","text":"design named list containing user-specified inputs movedesign workflow. minimum, includes elements data, dur, dti, n_individuals, set_target.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a movedesign_input object for simulation workflows — movedesign_input","text":"object class movedesign_input movedesign, contains input parameters metadata required movedesign workflow.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a movedesign_output object to store simulation outputs — movedesign_output","title":"Create a movedesign_output object to store simulation outputs — movedesign_output","text":"Constructs S3 object class movedesign_output stores outputs summaries specific simulation workflow. resulting object bundles relevant metadata original study design (inputs), simulation outputs (e.g., home range speed estimates), post-processing summaries (e.g., errors, credible intervals). movedesign_output object returned simulation functions like md_run() md_replicate(), acts primary data structure downstream analyses visualization via functions md_plot() md_check().","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a movedesign_output object to store simulation outputs — movedesign_output","text":"","code":"movedesign_output(input)"},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a movedesign_output object to store simulation outputs — movedesign_output","text":"S3 object class movedesign_output containing simulation outputs, summaries, associated metadata.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a movedesign_preprocess object for preprocessed results — movedesign_preprocess","title":"Create a movedesign_preprocess object for preprocessed results — movedesign_preprocess","text":"Creates S3 object class movedesign_preprocess store preprocessing steps outputs movedesign workflow.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a movedesign_preprocess object for preprocessed results — movedesign_preprocess","text":"","code":"movedesign_preprocess(input)"},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a movedesign_preprocess object for preprocessed results — movedesign_preprocess","text":"input list, containing preprocessed results metadata.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/movedesign_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a movedesign_preprocess object for preprocessed results — movedesign_preprocess","text":"object class movedesign_preprocess movedesign.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/movmods.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of movement processes. — movmods","title":"Table of movement processes. — movmods","text":"Lists continuous-time movement process models ctmm. row different movement model applicable animal movement.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/movmods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of movement processes. — movmods","text":"","code":"movmods"},{"path":"https://ecoisilva.github.io/movedesign/reference/movmods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Table of movement processes. — movmods","text":"data.frame 5 rows 6 variables: name Full descriptive name model (e.g., \"Ind. Ident. Distr. (IID)\"). Used throughout ctmm. See reference details model properties. name_short Abbreviated name, used space limited. tau_p Logical. TRUE model includes position autocorrelation timescale (.e., home range crossing time). tau_v Logical. TRUE model includes velocity autocorrelation timescale (.e., directional persistence). hrange Logical; TRUE model supports range residency, meaning animal likely remain within bounded area \"home range\" instead expanding indefinitely. pars Character string summarizing autocorrelation parameters (e.g., tau_p, tau_v) model estimates. Shown HTML documentation.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/movmods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Table of movement processes. — movmods","text":"Calabrese et al. (2016). ctmm: R package analyzing animal relocation data continuous-time stochastic process. Methods Ecology Evolution, 7(9), 1124-1132 doi:10.1111/2041-210X.12559. Silva et al. (2022). Autocorrelation‐informed home range estimation: review practical guide. Methods Ecology Evolution, 13(3), 534-544 <10.1111/2041-210X.13786>.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/new_movedesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a movedesign S3 object — new_movedesign","title":"Construct a movedesign S3 object — new_movedesign","text":"generic internal constructor creating S3 objects representing different stages \"movedesign\" workflow, input, preprocessing, simulation, output, diagnostics, plots.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/new_movedesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a movedesign S3 object — new_movedesign","text":"","code":"new_movedesign(x, subclass, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/new_movedesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a movedesign S3 object — new_movedesign","text":"x underlying data object wrapped (e.g., list, tibble, simulation object, output). subclass Character string specifying subclass (e.g., movedesign_input, movedesign_output). ... Additional attributes set object.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/new_movedesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a movedesign S3 object — new_movedesign","text":"object class subclass movedesign.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for movedesign_check objects — print.movedesign_check","title":"Print method for movedesign_check objects — print.movedesign_check","text":"Print method movedesign_check objects","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for movedesign_check objects — print.movedesign_check","text":"","code":"# S3 method for class 'movedesign_check' print(x, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for movedesign_check objects — print.movedesign_check","text":"x object class movedesign_check ... Unused","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for movedesign_input — print.movedesign_input","title":"Print method for movedesign_input — print.movedesign_input","text":"Print method movedesign_input","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for movedesign_input — print.movedesign_input","text":"","code":"# S3 method for class 'movedesign_input' print(x, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for movedesign_input — print.movedesign_input","text":"x object class movedesign_input ... Additional arguments","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for movedesign_output — print.movedesign_output","title":"Print method for movedesign_output — print.movedesign_output","text":"Print method movedesign_output","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for movedesign_output — print.movedesign_output","text":"","code":"# S3 method for class 'movedesign_output' print(x, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for movedesign_output — print.movedesign_output","text":"x object class movedesign_output ... Additional arguments","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for movedesign_preprocess — print.movedesign_preprocess","title":"Print method for movedesign_preprocess — print.movedesign_preprocess","text":"Print method movedesign_preprocess","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for movedesign_preprocess — print.movedesign_preprocess","text":"","code":"# S3 method for class 'movedesign_preprocess' print(x, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for movedesign_preprocess — print.movedesign_preprocess","text":"x object class movedesign_preprocess ... Additional arguments","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for movedesign_report objects — print.movedesign_report","title":"Print method for movedesign_report objects — print.movedesign_report","text":"Print method movedesign_report objects","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for movedesign_report objects — print.movedesign_report","text":"","code":"# S3 method for class 'movedesign_report' print(x, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/print.movedesign_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for movedesign_report objects — print.movedesign_report","text":"x object class movedesign_report ... Unused","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run movedesign' R Shiny Application — run_app","title":"Run movedesign' R Shiny Application — run_app","text":"Run movedesign' R Shiny Application","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run movedesign' R Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://ecoisilva.github.io/movedesign/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run movedesign' R Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See ?golem::get_golem_options details.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run movedesign' R Shiny Application — run_app","text":"return value, called side effects.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Running hierarchical models — run_meta","title":"Running hierarchical models — run_meta","text":"Performs hierarchical meta-analyses animal movement simulation outputs estimate key movement metrics, mean home range area /mean movement speed sampled population. function can also compare metrics two groups (via ratios) specified. function leverages core methods ctmm package: ctmm::akde(): Computes home range areas using Autocorrelated Kernel Density Estimator (AKDE), explicitly accounts autocorrelation animal movement data produce statistically robust space-use estimates. ctmm::speed(): Computes Continuous-Time Speed Distance (CTSD) estimates, providing biologically meaningful summaries movement speed, proportional distance traveled. methods allow robust comparisons across individuals, groups, resampling scenarios. Optionally, function performs resampling randomly drawing multiple sets individuals population, allowing assessment estimate variability sample size increases individuals resampled. approach helps quantify precision reliability estimates different sampling scenarios. Internally, function wraps run_meta_resamples() fit hierarchical models without resampling initial evaluation.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Running hierarchical models — run_meta","text":"","code":"run_meta(   rv,   set_target = c(\"hr\", \"ctsd\"),   subpop = FALSE,   trace = FALSE,   iter_step = 2,   ... )"},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Running hierarchical models — run_meta","text":"rv named list containing simulation inputs, settings, group assignments. Must NULL. set_target Character vector specifying target metrics. Options \"hr\" (home range area) /\"ctsd\" (movement speed). Defaults c(\"hr\", \"ctsd\"). subpop Logical; TRUE, analyzes population-level inferences subpopulations/groups (e.g., males vs. females). Requires group assigments rv. trace Logical; TRUE, prints progress messages. Default FALSE. iter_step Integer. Step size used increment number individuals sampled iteration. example, iter_step = 2, function evaluate sample sizes 2, 4, 6, etc., maximum population sample size. Defaults 2. ... Additional arguments advanced control: .only_max_m Logical. TRUE, runs meta-analysis maximum population sample size. Skips intermediate sample sizes. .max_m Integer. Sets user-defined maximum sample size use resampling sequence. Overrides default, uses available individuals. .m Integer. Specifies exact sample size use. Overrides automatic sequence generation. Accepts single value. .automate_seq Logical. TRUE, automatically generates informative non-redundant sequence sample sizes better plot readability runtime efficiency. .lists List (Optional). Supplies precomputed input objects, generated via .build_meta_objects().","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Running hierarchical models — run_meta","text":"data frame summarizing outputs target, population sample size, group (specified) single draw (sample). Columns include: type Research target, e.g., hr /ctsd. m Number individuals sample. sample Sample index (repeated draws). truth True, expected value. est Point estimate. lci Lower confidence interval. uci Upper confidence interval. error Relative error. error_lci Lower CI relative error. error_uci Upper CI relative error. ratio_truth True group ratio (/B), subpop=TRUE. ratio_est Estimated group ratio. ratio_lci Lower CI estimated group ratio. ratio_uci Upper CI estimated group ratio. overlaps Logical; whether estimate overlaps truth. is_grouped Logical; TRUE grouped. group Group label (, , B). subpop_detected Logical; subpopulation detected?","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Running hierarchical models — run_meta","text":"function intended internal use may assume inputs follow specific structure constraints referenced explicitly.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_loocv.html","id":null,"dir":"Reference","previous_headings":"","what":"Running LOOCV on hierarchical model outputs — run_meta_loocv","title":"Running LOOCV on hierarchical model outputs — run_meta_loocv","text":"Performs Leave-One-Cross-Validation (LOOCV) hierarchical model outputs assess influence individual simulated animals population-level estimates. Supports analyses without groups. iteration, function removes one individual, refits hierarchical model remaining dataset, recalculates target population-level estimates. process repeated every individual excluded . approach provides insight sensitive overall conclusions specific individuals. helps identify influential individuals assess robustness.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_loocv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Running LOOCV on hierarchical model outputs — run_meta_loocv","text":"","code":"run_meta_loocv(   rv,   set_target = c(\"hr\", \"ctsd\"),   subpop = FALSE,   trace = FALSE,   ... )"},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_loocv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Running LOOCV on hierarchical model outputs — run_meta_loocv","text":"rv reactiveValues object list containing simulation inputs, fitted models, (optionally) group assignments. set_target Character vector specifying target metrics. Options \"hr\" home range area /\"ctsd\" movement speed. Defaults c(\"hr\", \"ctsd\"). subpop Logical; TRUE, analyzes population-level inferences groups (e.g., males vs. females). Requires valid group assigments rv. trace Logical; TRUE, prints progress diagnostic messages. Default FALSE. ... Additional arguments advanced control: .only_max_m Logical. TRUE, runs meta-analysis maximum population sample size, skipping intermediate sample sizes. .progress Integer. Displays progress bar. .m Integer. Specifies exact sample size use. Overrides automatic sequence generation. Accepts single value. .lists List (optional); supplies precomputed input objects, typically created via .build_meta_objects().","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_loocv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Running LOOCV on hierarchical model outputs — run_meta_loocv","text":"data frame containing summarized simulation outputs.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_loocv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Running LOOCV on hierarchical model outputs — run_meta_loocv","text":"Inês Silva .simoes-silva@hzdr.de","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_loocv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Running LOOCV on hierarchical model outputs — run_meta_loocv","text":"","code":"if(interactive()) {    run_meta_loocv(rv, set_target = \"hr\") }"},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_resamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Running hierarchical models (with resampling) — run_meta_resamples","title":"Running hierarchical models (with resampling) — run_meta_resamples","text":"function performs meta-analyses simulated animal tracking data, estimate key movement metrics, mean home range area /mean movement speed sampled population. function can also compare metrics two groups specified. resampling enabled, function repeatedly draws random subsets individuals available population simulate parameter estimates behave across varying population sample sizes. resampling allows users assess estimate variability sample size increases individuals resampled. example, can reveal mean home range area converges individuals added sampled population. approach helps quantify robustness precision estimated parameters different sampling scenarios. function leverages core methods ctmm package: ctmm::akde(): Computes home range areas using Autocorrelated Kernel Density Estimator (AKDE), explicitly accounts autocorrelation animal movement data produce statistically robust space-use estimates. ctmm::speed(): Computes Continuous-Time Speed Distance (CTSD) estimates, providing biologically meaningful summaries movement speed, proportional distance traveled. methods allow robust comparisons across individuals, groups, resampling scenarios.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_resamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Running hierarchical models (with resampling) — run_meta_resamples","text":"","code":"run_meta_resamples(   rv,   set_target = c(\"hr\", \"ctsd\"),   subpop = FALSE,   random = FALSE,   max_draws = 100,   iter_step = 2,   trace = FALSE,   ... )"},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_resamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Running hierarchical models (with resampling) — run_meta_resamples","text":"rv named list containing simulation inputs, settings, group assignments. Must NULL. set_target Character vector specifying target metrics. Options \"hr\" (home range area) /\"ctsd\" (movement speed). Defaults c(\"hr\", \"ctsd\"). subpop Logical; TRUE, analyzes population-level inferences subpopulations/groups (e.g., males vs. females). Requires group assigments rv. random Logical; TRUE, performs random sampling individuals using different combinations (max_draws). max_draws Integer; maximum number random draws per combination size random=TRUE. Ignored random=FALSE. iter_step Integer. Step size used increment number individuals sampled iteration. example, iter_step = 2, function evaluate sample sizes 2, 4, 6, etc., maximum population sample size. Defaults 2. trace Logical; TRUE, prints progress messages. Default FALSE. ... Additional arguments advanced control: .only_max_m Logical. TRUE, runs meta-analysis maximum population sample size. Skips intermediate sample sizes. .max_m Integer. Sets user-defined maximum sample size use resampling sequence. Overrides default, uses available individuals. .m Integer. Specifies exact sample size use. Overrides automatic sequence generation. Accepts single value. .automate_seq Logical. TRUE, automatically generates informative non-redundant sequence sample sizes better plot readability runtime efficiency. .lists List (Optional). Supplies precomputed input objects, generated via .build_meta_objects().","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_resamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Running hierarchical models (with resampling) — run_meta_resamples","text":"data frame summarizing outputs target, population sample size, sample, group (specified). Columns include: type Research target, e.g., \"hr\" \"ctsd\". m Number individuals sample. sample Sample index (repeated draws). truth True value. est Point estimate. lci Lower confidence interval. uci Upper confidence interval. error Relative error. error_lci Lower CI relative error. error_uci Upper CI relative error. ratio_truth True group ratio (/B), subpop=TRUE. ratio_est Estimated group ratio. ratio_lci Lower CI estimated group ratio. ratio_uci Upper CI estimated group ratio. overlaps Logical; whether estimate overlaps truth. is_grouped Logical; TRUE grouped. group Group label (\"\", \"\", \"B\"). subpop_detected Logical; subpopulation detected?","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_resamples.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Running hierarchical models (with resampling) — run_meta_resamples","text":"Inês Silva .simoes-silva@hzdr.de","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/run_meta_resamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Running hierarchical models (with resampling) — run_meta_resamples","text":"","code":"if(interactive()) {    run_meta_resamples(rv, set_target = \"hr\") }"},{"path":"https://ecoisilva.github.io/movedesign/reference/simulating_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate movement data from continuous-time movement models — simulating_data","title":"Simulate movement data from continuous-time movement models — simulating_data","text":"Generates simulated animal movement tracks based continuous-time movement models using ctmm::simulate(). Supports single-group grouped simulations, determined study design data parameters. Used within movedesign application workflows create synthetic data simulation studies evaluate study design.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/simulating_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate movement data from continuous-time movement models — simulating_data","text":"","code":"simulating_data(rv, seed)"},{"path":"https://ecoisilva.github.io/movedesign/reference/simulating_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate movement data from continuous-time movement models — simulating_data","text":"rv reactiveValues object simulation inputs: dur list elements value unit (e.g., list(value = 2, unit = \"months\")), study's maximum duration. unit must either \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\". dti list elements value unit (e.g., list(value = 1, unit = \"day\")), specifying intended sampling interval relocations. unit must either \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\". data_type: Character, data source informs simulations. add_ind_var: Logical; TRUE, draws parameters population distribution new individual. modList: List fitted models. meanfitList: List mean models individual variation. grouped: Logical; TRUE, simulates two groups. which_meta: Character vector; analytical target. tau_p, tau_v, sigma, mu: Lists movement parameters. seed Integer random number generator, ensuring reproducibility.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/simulating_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate movement data from continuous-time movement models — simulating_data","text":"list simulated movement datasets: grouped = FALSE, list single simulated track. grouped = TRUE, list two tracks (groups B).","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/simulating_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate movement data from continuous-time movement models — simulating_data","text":"function simulates animal movement tracks based selected mode design settings. first constructs time sequence using specified duration interval. Depending simulation mode (data_type), either retrieves movement models modList (simulated data) uses meanfitList raw movement parameters build models (uploaded selected data). group comparison requested, models prepared groups. Tracks simulated using ctmm::simulate() subsequently pseudonymized.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/simulating_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simulate movement data from continuous-time movement models — simulating_data","text":"function intended internal use may assume inputs follow specific structure constraints referenced explicitly.","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for movedesign_check objects — summary.movedesign_check","title":"Summary method for movedesign_check objects — summary.movedesign_check","text":"Summary method movedesign_check objects","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for movedesign_check objects — summary.movedesign_check","text":"","code":"# S3 method for class 'movedesign_check' summary(object, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for movedesign_check objects — summary.movedesign_check","text":"object object class movedesign_check ... Unused","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for movedesign_input — summary.movedesign_input","title":"Summary method for movedesign_input — summary.movedesign_input","text":"Summary method movedesign_input","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for movedesign_input — summary.movedesign_input","text":"","code":"# S3 method for class 'movedesign_input' summary(object, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for movedesign_input — summary.movedesign_input","text":"object object class movedesign_input ... Additional arguments","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for movedesign_output — summary.movedesign_output","title":"Summary method for movedesign_output — summary.movedesign_output","text":"Summary method movedesign_output","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for movedesign_output — summary.movedesign_output","text":"","code":"# S3 method for class 'movedesign_output' summary(object, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for movedesign_output — summary.movedesign_output","text":"object object class movedesign_output ... Additional arguments","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for movedesign_preprocess — summary.movedesign_preprocess","title":"Summary method for movedesign_preprocess — summary.movedesign_preprocess","text":"Summary method movedesign_preprocess","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for movedesign_preprocess — summary.movedesign_preprocess","text":"","code":"# S3 method for class 'movedesign_preprocess' summary(object, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for movedesign_preprocess — summary.movedesign_preprocess","text":"object object class movedesign_preprocess ... Additional arguments","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for movedesign_report objects — summary.movedesign_report","title":"Summary method for movedesign_report objects — summary.movedesign_report","text":"Summary method movedesign_report objects","code":""},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for movedesign_report objects — summary.movedesign_report","text":"","code":"# S3 method for class 'movedesign_report' summary(object, ...)"},{"path":"https://ecoisilva.github.io/movedesign/reference/summary.movedesign_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for movedesign_report objects — summary.movedesign_report","text":"object object class movedesign_report ... Unused","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"new-features-0-3-2","dir":"Changelog","previous_headings":"","what":"New features","title":"movedesign 0.3.2","text":"Added new core functions iteratively simulate movement design scenarios. Added new plotting functions highlight convergence diagnostics outputs. Implemented S3 classes methods represent manage different stages study design workflow.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"minor-improvements-0-3-2","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"movedesign 0.3.2","text":"Improved documentation core functions. Internal code optimization reduce redundancy.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"movedesign 0.3.2","text":"Fixed minor bugs affecting plotting color palettes. Resolved various small issues improve function stability user experience.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"movedesign-031","dir":"Changelog","previous_headings":"","what":"movedesign 0.3.1","title":"movedesign 0.3.1","text":"CRAN release: 2025-06-24","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"minor-improvements-0-3-1","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"movedesign 0.3.1","text":"Reduced file size CRAN submission. Updated documentation functions missing tags fit CRAN guidelines. Added properly-formatted reference DOIs.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"movedesign-030","dir":"Changelog","previous_headings":"","what":"movedesign 0.3.0","title":"movedesign 0.3.0","text":"Third release movedesign.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"movedesign 0.3.0","text":"Now fully supports multiple simulations within workflow. Added meta-analyses tab. Users can get mean estimates compare estimates two different groups (e.g. females/males). Users can test specific number tags, get minimum number tags specific output. Users can propagate estimate uncertainty initial dataset simulated dataset.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"minor-improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"movedesign 0.3.0","text":"Added outlier plots Data tabs. Added warning messages case low effective sample sizes. Report tab also highlights outputs meta-analyses.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"movedesign 0.3.0","text":"Fixed issue data upload due missing argument (#3). Fixed Report tab bug, now display correct CIs (#3). Fixed bug sampling duration/interval display correctly (#5).","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"movedesign-020","dir":"Changelog","previous_headings":"","what":"movedesign 0.2.0","title":"movedesign 0.2.0","text":"Second release movedesign.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"movedesign 0.2.0","text":"Began support multiple simulations within workflow. Expected errors update show mean (CIs applicable) multiple simulations. Can switch plots simulation (HR trajectories).","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"movedesign 0.2.0","text":"Updated tutorial. Updated installation vignette documentation.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"movedesign 0.2.0","text":"Fixed tables blocks multiple simulations. Added internal validation steps stop invalid sampling parameters crashing app.","code":""},{"path":[]},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"movedesign 0.1.1","text":"Home range plots now also show true 95% area. Added citation(\"movedesign\").","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"minor-improvements-0-1-1","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"movedesign 0.1.1","text":"Added blocks module. Uploading/selecting data optimized. Added alert error messages needed.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"movedesign 0.1.1","text":"Uploading incorrectly labeled files longer crashes app. Fixed bug table outputs due version 0.4.4 reactable. Main guided tour correctly follow new changes. fix_unit() now deal properly speed units. extract_pars() now works current movement models. guess_time() adjusted short runs. simulate_gps() now run properly dur_unit changed, dur set higher values.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"movedesign-010","dir":"Changelog","previous_headings":"","what":"movedesign 0.1.0","title":"movedesign 0.1.0","text":"Initial release movedesign.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"movedesign 0.1.0","text":"Guided tours now cover modules. Report now covers scenario questions requested. function guess_time() now works ctmm::speed() well.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"minor-improvements-0-1-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"movedesign 0.1.0","text":"Changed log-scaling plot within device tab scale_x_log10(). Tests added abbrv_unit() fix_unit(). Tests added shinytest2 framework.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"movedesign 0.1.0","text":"simulate_gps() now works properly within defined limits. Fixed bug extreme timescale parameters sims tab. Fixed bug table outputs sims tab.","code":""},{"path":"https://ecoisilva.github.io/movedesign/news/index.html","id":"movedesign-009","dir":"Changelog","previous_headings":"","what":"movedesign 0.0.9","title":"movedesign 0.0.9","text":"Added NEWS.md file track changes package.","code":""}]
